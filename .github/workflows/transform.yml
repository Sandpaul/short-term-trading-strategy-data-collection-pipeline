name: Build and Push Transform Pipeline

on:
    push:
        paths:
            - 'src/transform/**'
            - 'src/utils/**'
            - 'terraform/transform**'
            - '.github/workflows/transform.yml'

env:
    AWS_REGION: eu-west-2
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
    run-checks:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
            
            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                python-version: "3.12.5"
            
            - name: Install dependencies
              run: |
                python -m venv venv
                source venv/bin/activate
                pip install --upgrade pip
                pip install -r src/transform/requirements.txt
            
            - name: Run Bandit Security Checks
              run: |
                  source venv/bin/activate
                  bandit -r src/
              
            - name: Run Saftey Security Checks
              run: |
                  source venv/bin/activate
                  safety check --ignore 70612
              
            - name: Run Coverage Checks
              run: |
                  source venv/bin/activate
                  coverage run --omit 'venv/*' -m pytest && coverage report -m
    
    run-tests:
        runs-on: ubuntu-latest
        env:
            PYTHONPATH: ${{ github.workspace }}
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v4
            
            - name: Setup Python
              uses: actions/setup-python@v4
              with:
                python-version: "3.12.5"
            
            - name: Install dependencies
              run: |
                python -m venv venv
                source venv/bin/activate
                pip install --upgrade pip
                pip install -r src/transform/requirements.txt
                
            - name: Run Pytest
              run: |
                source venv/bin/activate
                pytest -v
    
    build:
        runs-on: ubuntu-latest
        needs:
            - run-checks
            - run-tests
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v1
            
            - name: Log in to Amazon ECR
              uses: aws-action/amazon-ecr-login@v1
              with:
                region: ${{ env.AWS_REGION }}
                aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
            
            - name: Build Docker image
              run: |
                docker build -t transform-function -f src/transform/Dockerfile .

            - name: Tag Docker image
              run: |
                docker tag transform-function:latest 339712945613.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/short_term_trading_data_pipeline_ecr:latest
            
            - name: Push Docker image
              run: |
                docker push 339712945613.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/short_term_trading_data_pipeline_ecr:latest
    
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up AWS CLI
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-region: ${{ env.AWS_REGION }}
                aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
            
            - name: Terraform Init
              working-directory: terraform
              run: |
                if [ ! -d ".terraform" ]; then
                  terraform init
                else
                  echo "Terraform already initialised"
                fi
            
            - name: Terraform Plan
              working-directory: terraform
              run: terraform plan
      
            - name: Terraform Apply
              working-directory: terraform
              run: terraform apply -auto-approve
